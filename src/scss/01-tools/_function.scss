@function strip-unit($number) {
	@return $number / ($number * 0 + 1);
}

@function rem($size, $stripUnit: false) {
	$rem-size: $size / 16px;
	@if $stripUnit == true {
		@return #{$rem-size};
	} @else {
		@return #{$rem-size}rem;
	}
}

/// Base path for assets (fonts, images...),
/// should not include trailing slash
/// @access public
/// @type String
$assets-base-path: '../' !default;

/// Asset URL builder
/// @access private
/// @param {String} $type - Asset type, matching folder name
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the asset
@function asset($type, $file) {
	@return url($assets-base-path + $type + '/' + $file);
}

/// Image asset helper
/// @access public
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the image
/// @require {function} asset
@function image($file) {
	@return asset('img', $file);
}

/// SVG asset helper
/// @access public
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the svg
/// @require {function} asset
@function svg($file) {
	@return asset('img/svg', $file);
}

/// Power function
/// @param {Number} $x
/// @param {Number} $n
/// @return {Number}
@function pow($x, $n) {
	$ret: 1;
    
	@if $n >= 0 {
		@for $i from 1 through $n {
			$ret: $ret * $x;
		} 
	} @else {
		@for $i from $n to 0 {
			$ret: $ret / $x;
		}
	}
  
	@return $ret;
}

/// toFixed() function in Sass
/// @author Hugo Giraudel
/// @param {Number} $float - Number to format
/// @param {Number} $digits [2] - Number of digits to leave
/// @return {Number}
@function to-fixed($float, $digits: 2) {
	$sass-precision: 5;
  
	@if $digits > $sass-precision {
		@warn 'Sass sets default precision to #{$sass-precision} digits, and there is no way to change that for now.'
			+ 'The returned number will have #{$sass-precision} digits, even if you asked for `#{$digits}`.'
			+ 'See https://github.com/sass/sass/issues/1122 for further informations.';
	}
  
	$pow: pow(10, $digits);
	@return round($float * $pow) / $pow;
}
